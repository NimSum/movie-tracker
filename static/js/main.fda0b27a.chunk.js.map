{"version":3,"sources":["images/film.png","images/hamburger.svg","images/active.svg","images/inactive.svg","actions/index.js","containers/Header/index.js","utils/apiFetches/fetchAnything.js","components/MovieCard/index.js","thunks/fetchMovieInfo.js","containers/Movies/index.js","components/Banner/index.js","components/Home/index.js","utils/apiFetches/postUser.js","components/LoginPage/index.js","utils/cleaners/cleanMovies.js","containers/MoviePage/index.js","containers/App/index.js","utils/apiFetches/deleteFavorite.js","reducers/currentUserReducer.js","reducers/index.js","reducers/moviesReducer.js","reducers/formTypeReducer.js","reducers/selectedMovieReducer.js","reducers/showFavoritesReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","formType","type","form","currentUser","id","name","email","favorites","userInfo","selectedMovie","movie","Header","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleClick","_ref","target","textContent","props","logOutUser","showFavorites","inherits","createClass","key","value","react_default","a","createElement","className","onClick","react_router_dom","to","src","film","alt","hamburger","Component","connect","state","dispatch","text","bool","isShown","fetchAnything","asyncToGenerator","regenerator_default","mark","_callee","url","response","wrap","_context","prev","next","fetch","sent","ok","Error","json","abrupt","stop","_x","MovieCard","showMoreInfo","card","showMovieInfo","toggleFavorite","_this$props$card","movie_id","title","poster_path","release_date","vote_average","overview","body","user_id","userId","updateFavorites","setState","loginPrompt","cardHover","favorite","active","inactive","userFavorites","fetchInfo","movieInfo","t0","fetchMovieInfo","movies","favoriteMovieIds","map","objectSpread","includes","movieCards","filter","components_MovieCard","uuidv4","require","posters","showFavs","all","fill","counter","movieTiles","space","Home","components_Banner","Movies","postUser","method","JSON","stringify","headers","Content-Type","_x2","LoginPage","formTypeHandler","_this$state","password","userName","fetchUserFavorites","favoritesUrl","data","submitUserData","_callee2","_this$formTypeHandler","_context2","t1","t2","t3","t4","t5","t6","signInUser","error","t7","handleChange","_ref3","_this$setState","defineProperty","handleSubmit","e","preventDefault","_this$state2","confirmPassword","passwordMismatch","_this$props","changeForm","react_router","signUpInputs","htmlFor","onChange","autoComplete","signInInputs","onSubmit","_ref4","cleanMovies","backdrop_path","_props$movie","App","_componentDidMount","result","results","addMovies","console","log","containers_Header","exact","path","component","MoviePage","deleteFavorite","movieId","initialState","rootReducer","combineReducers","undefined","action","toConsumableArray","favId","some","fav","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","basename","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.fda0b27a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/film.a8ba11ab.png\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.9e0d17aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/active.4bc306eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/inactive.5cff0a49.svg\";","export const addMovies = (movies) => ({\n  type: 'ADD_MOVIES',\n  movies\n})\n\nexport const formType = (type) => ({\n  type: 'FORM_TYPE',\n  form: type\n})\n\nexport const currentUser = (id, name, email, favorites) => ({\n  type: 'CURRENT_USER',\n  userInfo: { id, name, email, favorites }\n})\n\nexport const selectedMovie = (movie) => ({\n  type: 'SELECTED_MOVIE',\n  movie\n})\n\nexport const updateFavorites = (favorite) => ({\n  type: 'UPDATE_FAVORITES',\n  favorite\n})\n\nexport const showFavorites = (bool) => ({\n  type: 'SHOW_FAVORITES',\n  isShown: bool\n})","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'; \nimport { formType, currentUser, showFavorites }  from '../../actions/index';\nimport film from '../../images/film.png';\nimport hamburger from '../../images/hamburger.svg'\n\n\nexport class Header extends Component {\n  handleClick = ({target}) => {\n    target.textContent === 'Log-in' \n      ? this.props.formType('login')\n      : this.props.formType('signup')\n    switch(target.textContent) {\n      case 'Log-out':\n        this.props.logOutUser();\n        this.props.showFavorites(false);\n        break;\n      case 'Favorites':\n        this.props.showFavorites(true)\n        break;\n      default:\n      this.props.showFavorites(false)\n    }\n  }\n\n  render() {\n    const { name } = this.props.currentUser;\n    const userInfo = (<h3 className='user-greeting'>{`Hello ${name}!`}</h3>)\n    \n    return(\n      <header className='header' onClick={ this.handleClick }>\n        <article className='logo-wrapper'>\n          <h2 className='icon-text'>MT</h2>\n          <NavLink \n            to='/' \n            className='home-logo'>\n          <img \n            src={film} \n            alt='film with star icon' className='film-icon'/>\n          </NavLink>\n        </article>\n        <nav className='desktop-nav'>\n            { name && userInfo }\n          <NavLink \n            to='/' \n            className='nav'>\n            Home \n          </NavLink>\n          <NavLink \n            to={`${name ? '/' : '/login'}`}\n            className='nav'>\n            {`${ name ? 'Favorites' : 'Create Account'}`}\n          </NavLink>\n          <NavLink \n            to={`${name ? '/' : '/login'}`} className='nav' >\n            {`${ name ? 'Log-out' : 'Log-in'}`}\n          </NavLink>\n        </nav>\n        <nav className='mobile-nav hidden'>\n          <img className='menu-icon' alt='hamburger icon' src={hamburger}/>\n        </nav>\n      </header>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  formType: (text) => dispatch(formType(text)),\n  logOutUser: () => dispatch(currentUser()),\n  showFavorites: (bool) => dispatch(showFavorites(bool))\n})\n\nHeader.propTypes = {\n  currentUser: PropTypes.object,\n  formType: PropTypes.func,\n  logOutUser: PropTypes.func,\n  showFavorites: PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","export const fetchAnything = async (url) => {\n  const response = await fetch(url);\n  if(!response.ok) {\n    throw Error(\"Failed to fetch movies\")\n  }\n  return await response.json();\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { fetchMovieInfo } from '../../thunks/fetchMovieInfo';\nimport { updateFavorites, selectedMovie } from '../../actions/index.js';\nimport { key } from '../../apiKey';\nimport { connect } from 'react-redux';\nimport active from '../../images/active.svg';\nimport inactive from '../../images/inactive.svg';\n\nexport class MovieCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cardHover: false,\n      loginPrompt: false\n    }\n  }\n  \n  showMoreInfo = () => {\n    const { card } = this.props;\n    this.props.showMovieInfo(card);\n    // Original API call, converted to just use already fetched data for GJ pages\n    // const url = `https://api.themoviedb.org/3/movie/${card.movie_id}?api_key=${key}&language=en-US`;\n    // this.props.fetchInfo(url);\n  }\n\n  toggleFavorite = () => {\n    const { movie_id, title, poster_path, release_date, vote_average, overview } = this.props.card\n    const body = {\n      movie_id,\n      user_id: this.props.userId,\n      title,\n      poster_path,\n      release_date,\n      vote_average,\n      overview\n    }\n    \n    if (this.props.userId) {\n      this.props.updateFavorites(body)\n      this.setState({ loginPrompt: false })\n    } else {\n      this.setState({ loginPrompt: !this.state.loginPrompt })\n    }\n  }\n\n  render() {\n    const { card } = this.props;\n    return (\n      <article \n        key={card.movie_id} \n        className='movie-card'>\n      <img \n        src={`https://image.tmdb.org/t/p/w500/${card.poster_path}`} \n        alt={`Promotional movie poster for ${card.title}`} \n        className='poster-img'/>\n       <div className='card-hover'>\n        <h4 className='card-hover-heading'>{card.title}</h4>\n        <Link to={`/movies/${card.movie_id}`}>\n          <button \n            onClick={this.showMoreInfo} \n            className='more-info-btn btn'>\n            More <br/> Info\n          </button>\n        </Link>\n        <button \n          className='favorite-btn btn'\n          onClick={this.toggleFavorite}>\n          { card.favorite \n            ? <img src={active} alt='Star icon for favorited movie' className='active-star star'/> \n            : <img src={inactive} alt='Star icon' className='inactive-star star'/>}\n        </button>\n          { this.state.loginPrompt \n          ? (<p className='login-prompt prompt'>Please login to Favorite this card</p>)\n          : (<p className='prompt-placeholder prompt'>X</p>)\n          }\n      </div>\n    </article>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  userId: state.currentUser.id,\n  userFavorites: state.currentUser.favorites || []\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  showMovieInfo: (movie) => dispatch(selectedMovie(movie)),\n  fetchInfo: (url) => dispatch(fetchMovieInfo(url)),\n  updateFavorites: (movie) => dispatch(updateFavorites(movie))\n})\n\nMovieCard.propTypes = {\n  userId: PropTypes.number,\n  userFavorites: PropTypes.array,\n  fetchInfo: PropTypes.func,\n  updateFavorites: PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieCard);","import { fetchAnything } from '../utils/apiFetches/fetchAnything.js'\nimport{ selectedMovie } from '../actions/index'\n\nexport const fetchMovieInfo = (url) => {\n  return async (dispatch) => {\n    try {\n      const movieInfo = await fetchAnything(url)\n      dispatch(selectedMovie(movieInfo))\n    } catch(error) {\n      throw new Error('Problem getting movie info :(')\n    }\n  }\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport MovieCard from '../../components/MovieCard'\nimport { connect } from 'react-redux'\n\n\n\n\nexport const MoviesGallery = (props) => {\n  const favoriteMovieIds = props.favorites.map(movie => movie.movie_id)\n  const movies = props.movies.map( movie => {\n    return {...movie, favorite: favoriteMovieIds.includes(movie.movie_id) ? true : false}\n  })\n  const showMovies = props.showFavorites \n    ? movies.filter(movie => movie.favorite)\n    : movies\n  const movieCards = showMovies.map(movie => \n    <MovieCard \n      key={ movie.movie_id }\n      card={movie}\n    />)\n  \n  return (\n    <section className='movies-section'>\n      {movieCards}\n      { (props.favorites.length === 0 && props.showFavorites) && <h2>No Favorites Yet</h2> }\n    </section>\n  )\n}\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies,\n  favorites: state.currentUser.favorites || [],\n  showFavorites: state.showFavorites\n})\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.array,\n  favorites: PropTypes.array,\n  showFavorites: PropTypes.bool\n}\n\nexport default connect(mapStateToProps)(MoviesGallery)","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nconst uuidv4 = require('uuid/v4');\n\nexport const Banner = (props) => {\n    let all = Array(256).fill('');\n    let counter = 0;\n    const movieTiles = all.map(space => {\n      counter === 19 ? counter = 0 : counter++;\n      return (\n        <div key={uuidv4()} className='tile'>\n          <img src={props.posters[counter]} className='tile' alt=''/>\n        </div>)\n    })\n\n  return (\n    <section className='banner-section'>\n      <h1 className='banner-heading'>{props.showFavs ? 'Favorites' : 'MovieTracker'}</h1>\n      <div className='movie-tiles'>\n        {movieTiles}\n      </div>\n    </section>\n  )\n}\n\nexport const mapStateToProps = (state) => ({\n  posters: state.movies.map(movie => `https://image.tmdb.org/t/p/w500/${movie.poster_path}`),\n  showFavs: state.showFavorites\n})\n\nBanner.propTypes = {\n  posters: PropTypes.array,\n  showFavs: PropTypes.bool\n}\n\nexport default connect(mapStateToProps)(Banner);\n\n","import React from 'react';\nimport Movies from '../../containers/Movies';\nimport Banner from '../Banner';\n\nconst Home = () => (\n  <section className=\"home-section\">\n    < Banner />\n    < Movies />\n  </section>\n)\n\nexport default Home;","export const postUser = async (url, body) => {\n  const response = await fetch( url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  })\n  if (!response.ok) {\n    throw new Error('Failed to post user data')\n  }\n  return response.json();\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { postUser } from '../../utils/apiFetches/postUser';\nimport { fetchAnything } from '../../utils/apiFetches/fetchAnything';\nimport { currentUser, formType } from '../../actions';\nimport { Redirect } from 'react-router-dom';\n\nexport class LoginPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      password: '',\n      email: '',\n      confirmPassword: '',\n      userName: '',\n      error: true,\n      passwordMismatch: false\n    }\n  }\n\n  formTypeHandler = () => {\n    const { email, password, userName } = this.state;\n    const userInfo = this.props.formType === 'login'\n    ? ({ email, password })\n    : ({ email, password, name: userName });\n    const url = this.props.formType === 'login'\n      ? 'http://localhost:3000/api/users'\n      : 'http://localhost:3000/api/users/new'\n    return ({ url, userInfo, email, userName})\n  }\n\n  fetchUserFavorites = async (userId) => {\n    const favoritesUrl = `http://localhost:3000/api/users/${userId}/favorites`\n    const favorites = await fetchAnything(favoritesUrl)\n    return favorites.data;\n  }\n\n  submitUserData = async () => {\n    const {url, userInfo, email, userName} = this.formTypeHandler();\n    try {\n      const response = await postUser(url, userInfo);\n      this.props.formType === 'login' \n      ? this.props.signInUser({...response.data, favorites: await this.fetchUserFavorites(response.data.id)})\n      : this.props.signInUser({ id:response.id, email, name: userName, favorites: []});\n      await this.setState({ error: false});\n    } catch(error) {\n      this.setState({ error: true })\n    }\n  }\n\n  handleChange = ({target}) => {\n    this.setState({ [target.name]: target.value, passwordMismatch: false, error: true })\n  } \n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { email, confirmPassword, password, userName } = this.state;\n    if (this.props.formType === 'login') {\n      // (email.length && password.length) && this.submitUserData();\n    } else {\n      // (email.length && password.length && confirmPassword === password && userName.length) && this.submitUserData();\n    }\n    const passwordMismatch = this.props.formType === 'signup' && password !== confirmPassword;\n    this.setState({ passwordMismatch })\n  }\n  \n  render() {\n    const { formType, currentUser, changeForm } = this.props\n    if (currentUser.name) return (<Redirect to='/'/>);\n    const signUpInputs = (\n      <div className=\"signup-form-inputs\">\n        <label \n          htmlFor='userName' \n          className='sign-up input-label'>\n          Username\n        </label>\n        <input \n          onChange={this.handleChange} \n          name=\"userName\" \n          type='text' \n          id='userName' \n          className='sign-up form-input'\n          autoComplete='name'>\n        </input>\n        <label \n          htmlFor='email-input' \n          className='sign-up input-label'>\n          E-mail\n        </label>\n        <input \n          type='email' \n          id='email-input' \n          className='sign-up form-input' \n          onChange={this.handleChange} \n          name='email'\n          autoComplete=\"email\">\n          </input>\n        <label \n          htmlFor='password-input' \n          className='sign-up input-label'>\n          Password\n        </label>\n        <input \n          type='password' \n          id='password-input' \n          className='sign-up form-input' \n          onChange={this.handleChange} \n          name='password'\n          autoComplete='new-password'>\n        </input>\n        <label \n          htmlFor='confirm-password-input' \n          className='sign-up input-label'>\n          Confirm Password\n        </label>\n        <input \n          onChange={this.handleChange} \n          name=\"confirmPassword\" \n          type='password' \n          id='confirm-password-input' \n          className='sign-up form-input'\n          autoComplete='new-password'>\n        </input>\n      </div>)\n    const signInInputs = (\n      <div className=\"sign-in-inputs\">\n        <label \n        htmlFor='email-input' \n        className='email-input-label input-label'>\n        E-mail\n        </label>\n          <input \n          type='email' \n          id='email-input' \n          className='form-input' \n          onChange={this.handleChange} \n          name='email' \n          autoComplete='username'>\n        </input>\n        <label \n          htmlFor='password-input' \n          className='password-input-label \n          input-label'>\n          Password\n        </label>\n        <input \n          type='password' \n          id='password-input' \n          className='form-input' \n          onChange={this.handleChange} \n          name='password' \n          autoComplete='current-password'>\n        </input>\n      </div>)\n    const createActLink = (\n      <span \n        className='signup-link' \n        onClick={() => changeForm('signup')}>\n        Create Account\n      </span>)\n    const errorText = 'This functionality is disabled, the accounts API is only accessible through local server :('\n      // Original message, converted to message gh pages user\n      // ? <p>Email and password do not match an account, check login info or {createActLink}</p>\n      // : 'Email has already been used.'\n    return (\n      <main className='login-page'>\n        <h2 className='form-heading'>{ formType === 'login' ? 'LOGIN' : 'SIGN-UP' }</h2> \n        <form className='login-form' onSubmit={this.handleSubmit}>\n          <fieldset className='login-fieldset'>\n            { formType === 'login' ? signInInputs : signUpInputs }\n            { this.state.passwordMismatch &&  <p>Passwords do not match</p>}\n            { this.state.error && <p className='login-error'>{errorText}</p>}\n            <input id='form-submit-btn' type=\"submit\" value=\"Submit\" />\n          </fieldset>\n        </form>\n      </main>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  formType: state.formType,\n  currentUser: state.currentUser\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  signInUser: ({id, name, email, favorites}) => \n    dispatch(currentUser(id, name, email, favorites)), \n  changeForm: (text) => dispatch(formType(text))\n})\n\nLoginPage.propTypes = {\n  formType: PropTypes.string,\n  currentUser: PropTypes.object,\n  signInUser: PropTypes.func,\n  changeForm: PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","export const cleanMovies = (movies) => movies.map(movie => {\n  const { id, backdrop_path, title, poster_path, release_date, vote_average, overview } = movie\n  // Added backdrop path for single api call(gj pages friendly)\n  return {\n    movie_id: id,\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n    overview,\n    backdrop_path\n  }\n})\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport const MoviePage = (props) =>  {\n  const { title, backdrop_path, overview, poster_path, release_date, vote_average } = props.movie;\n  \n  return(\n    <section className='movie-page-container'>\n      <article className='movie-banner-wrapper'>\n        <img \n          src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}  \n          alt={`Promotional poster from ${title}`} \n          className='movie-banner-img'\n          />\n      </article>\n      <article className='poster-container'>\n          <img \n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}  \n            alt={`Promotional poster from ${title}`} \n            className='movie-poster-img'/>\n      </article>\n      <article className='movie-text-container'>\n        <h2 className='title-heading'>{ title }</h2>\n        <h3 className='date-heading'>{ release_date }</h3>\n        <h4 className='rating-heading'>Rating: { vote_average }</h4>\n        <p className='overview-text'>{ overview }</p>\n      </article>\n    </section>\n  )\n}\n\nexport const mapStateToProps = (state) => ({\n  movie: state.selectedMovie\n})\n\nMoviePage.propTypes = {\n  movie: PropTypes.object\n}\n\nexport default connect(mapStateToProps)(MoviePage)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom';\nimport { key } from '../../apiKey';\nimport Header from '../Header'\nimport Home from '../../components/Home';\nimport LoginPage from '../../components/LoginPage'\nimport { fetchAnything } from '../../utils/apiFetches/fetchAnything';\nimport { cleanMovies } from '../../utils/cleaners/cleanMovies'\nimport { addMovies } from '../../actions/index'\nimport MoviePage from '../../containers/MoviePage'\n\nexport class App extends Component {\n  async componentDidMount() {\n    // Use gist of copied data in place of api request with key\n    const nowShowingUrl = 'https://gist.githubusercontent.com/NimSum/10413ecf56ebb80fd5cc1c82ba3392f5/raw/6fba221c12d065f673cc5b066621d0c4984edfa1/mock-movie-tracker-api';\n    try {\n      const movies = await fetchAnything(nowShowingUrl);\n      const result = await cleanMovies(movies.results)\n      await this.props.addMovies(result)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Route exact path='/' component={ Home } />\n        <Route exact path='/favorites' component={ Home } />\n        <Route exact path='/login' component={ LoginPage } />\n        <Route exact path='/movies/:id' component={ MoviePage } />\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  addMovies: (movies) => dispatch(addMovies(movies))\n})\n\nApp.propTypes = {\n  movies: PropTypes.array,\n  addMovies: PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const deleteFavorite = async (userId, movieId) => {\n  const url = `http://localhost:3000/api/users/${userId}/favorites/${movieId}`\n  const response = await fetch(url, {\n    method: 'DELETE',\n    headers: {'Content-Type': 'application/json'}\n  })\n    if (!response.ok) {\n      throw new Error('Something went wrong')\n    }\n  return response.json()\n}","import { deleteFavorite } from '../utils/apiFetches/deleteFavorite';\nimport { postUser } from '../utils/apiFetches/postUser';\nconst initialState = {}\n\nexport const currentUserReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'CURRENT_USER':\n      return {...state, ...action.userInfo};\n    case 'UPDATE_FAVORITES':\n      const favId = action.favorite.movie_id\n      const existingFav =  state.favorites.some(fav => fav.movie_id === favId);\n      if(existingFav) {\n        deleteFavorite(state.id, favId)\n        return {...state, favorites: state.favorites.filter(movie => movie.movie_id !== favId) }\n      } else {\n        postUser('http://localhost:3000/api/users/favorites/new', action.favorite)\n        return {...state, favorites: state.favorites.concat(action.favorite) }\n      }\n    default: \n      return state;\n  }\n}","import { moviesReducer } from './moviesReducer'\nimport { formTypeReducer } from './formTypeReducer'\nimport { combineReducers } from 'redux'\nimport { currentUserReducer } from './currentUserReducer'\nimport { selectedMovieReducer } from './selectedMovieReducer'\nimport { showFavoritesReducer } from './showFavoritesReducer'\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n  formType: formTypeReducer,\n  currentUser: currentUserReducer,\n  selectedMovie: selectedMovieReducer,\n  showFavorites: showFavoritesReducer\n})\n\nexport default rootReducer;","export const moviesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_MOVIES':\n      return [...state, ...action.movies]\n    default :\n      return state;\n  }\n}","export const formTypeReducer = (state = 'login', action) => {\n  switch (action.type) {\n    case 'FORM_TYPE':\n      return action.form\n    default: \n      return state;\n  }\n}","export const selectedMovieReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SELECTED_MOVIE' :\n      return {...state, ...action.movie}\n    default :\n      return state\n  }\n}","export const showFavoritesReducer = (state = false, action) => {\n  return action.type === 'SHOW_FAVORITES'\n    ? action.isShown\n    : state\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { HashRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename='/'>\n      <App /> \n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'));"],"sourceRoot":""}